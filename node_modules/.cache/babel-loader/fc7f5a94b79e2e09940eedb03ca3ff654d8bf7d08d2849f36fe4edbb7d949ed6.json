{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\c9\\\\test2\\\\src\\\\components\\\\petPosts\\\\MyPosts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getAllPetPosts, deletePetPost } from '../../services/petPostService';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport \"./MyPosts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyPosts = ({\n  currentUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [myPosts, setMyPosts] = useState([]); // state for user's posts\n\n  useEffect(() => {\n    const fetchAndSortPosts = async () => {\n      const petPostsArray = await getAllPetPosts();\n\n      // filter posts by current user's ID\n      const userPosts = petPostsArray.filter(post => post.ownerId === currentUser.id);\n\n      // sort userPosts by timestamp in descending order\n      const sortedUserPosts = userPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      console.log(sortedUserPosts);\n      setMyPosts(sortedUserPosts);\n    };\n    fetchAndSortPosts();\n  }, [currentUser.id]); // fetch posts whenever currentUser.id changes\n\n  // Handle post deletion\n  const handleDelete = async postToDelete => {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the pet post for ${postToDelete.name}?`);\n    if (confirmDelete) {\n      try {\n        await deletePetPost(postToDelete.id); // Delete the post\n\n        // Update state after deletion\n        setMyPosts(prevPosts => prevPosts.filter(petPost => petPost.id !== postToDelete.id));\n        alert('Pet post deleted successfully.');\n      } catch (error) {\n        console.error('Failed to delete pet post:', error);\n        alert('Failed to delete pet post.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"article-lists-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article-list-container\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"article\",\n          children: myPosts.length > 0 ? myPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"article-list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-and-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.photo,\n                alt: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Age: \", post.age, \" \", post.ageUnit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Species: \", post.species]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Breed: \", post.breed]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Medical Condition: \", post.medicalCondition]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Behavioral Issues: \", post.behavioralIssues]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Reason for Rehoming: \", post.reasonForRehoming]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Posted on: \", new Date(post.timestamp).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  onClick: () => navigate(`/updateMyPost/${post.id}`),\n                  children: \"Modify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: () => handleDelete(post),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No posts found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MyPosts, \"CBKqvJN7A5W20qS9wbQwV4xKGE4=\", false, function () {\n  return [useNavigate];\n});\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useEffect","useState","getAllPetPosts","deletePetPost","useNavigate","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","MyPosts","currentUser","_s","navigate","myPosts","setMyPosts","fetchAndSortPosts","petPostsArray","userPosts","filter","post","ownerId","id","sortedUserPosts","sort","a","b","Date","timestamp","console","log","handleDelete","postToDelete","confirmDelete","window","confirm","name","prevPosts","petPost","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","src","photo","alt","age","ageUnit","species","breed","medicalCondition","behavioralIssues","reasonForRehoming","toLocaleDateString","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/c9/test2/src/components/petPosts/MyPosts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAllPetPosts, deletePetPost } from '../../services/petPostService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./MyPosts.css\"\r\n\r\nexport const MyPosts = ({ currentUser }) => {\r\n    const navigate = useNavigate(); \r\n    const [myPosts, setMyPosts] = useState([]); // state for user's posts\r\n\r\n    useEffect(() => {\r\n        const fetchAndSortPosts = async () => {\r\n                const petPostsArray = await getAllPetPosts();\r\n\r\n                // filter posts by current user's ID\r\n                const userPosts = petPostsArray.filter(post => post.ownerId === currentUser.id);\r\n\r\n                // sort userPosts by timestamp in descending order\r\n                const sortedUserPosts= userPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n                console.log(sortedUserPosts)\r\n                setMyPosts(sortedUserPosts)\r\n        };\r\n\r\n        fetchAndSortPosts();\r\n    }, [currentUser.id]); // fetch posts whenever currentUser.id changes\r\n\r\n    // Handle post deletion\r\n    const handleDelete = async (postToDelete) => {\r\n        const confirmDelete = window.confirm(`Are you sure you want to delete the pet post for ${postToDelete.name}?`);\r\n        if (confirmDelete) {\r\n            try {\r\n                await deletePetPost(postToDelete.id); // Delete the post\r\n\r\n                // Update state after deletion\r\n                setMyPosts(prevPosts =>\r\n                    prevPosts.filter(petPost => petPost.id !== postToDelete.id)\r\n                );\r\n                alert('Pet post deleted successfully.');\r\n            } catch (error) {\r\n                console.error('Failed to delete pet post:', error);\r\n                alert('Failed to delete pet post.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>My Posts</h2>\r\n            <div className=\"article-lists-container\">\r\n                <div className=\"article-list-container\">\r\n                    <article className=\"article\">\r\n                        {myPosts.length > 0 ? myPosts.map((post) => (\r\n                            <div className=\"article-list-item\" key={post.id}>\r\n                                <h2>{post.name}</h2>\r\n                                <div className='photo-and-info'>\r\n                                <img src={post.photo} alt={post.name} />\r\n                                <div className='info'>\r\n                                <p>Age: {post.age} {post.ageUnit}</p>\r\n                                <p>Species: {post.species}</p>\r\n                                <p>Breed: {post.breed}</p>\r\n                                <p>Medical Condition: {post.medicalCondition}</p>\r\n                                <p>Behavioral Issues: {post.behavioralIssues}</p>\r\n                                <p>Reason for Rehoming: {post.reasonForRehoming}</p>\r\n                                <p><small>Posted on: {new Date(post.timestamp).toLocaleDateString()}</small></p> {/* Fixed typo in timestamp */}\r\n                                <Button variant=\"warning\" onClick={() => navigate(`/updateMyPost/${post.id}`)}>Modify</Button>\r\n                                <Button variant=\"success\" onClick={() => handleDelete(post)}>Delete</Button>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        )) : <p>No posts found</p>}\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}