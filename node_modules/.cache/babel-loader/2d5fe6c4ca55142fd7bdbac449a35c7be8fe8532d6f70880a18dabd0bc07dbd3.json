{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\c9\\\\test2\\\\src\\\\components\\\\profile\\\\MyProfile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { deleteUserProfile, getUserById, updateUserProfile } from \"../../services/userService\";\n// import { useNavigate } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\n\n// export const MyProfile = ({ currentUser }) => {\n//   const [myPosts, setMyPosts] = useState([]);\n// const [allUsers,setAllUsers]=useState([])\n// const [existingUser,setExistingUsers]=useState([])\n// const [userBeingEdited, setUserBeingEdited] = useState({})\n// const navigate = useNavigate() // useNavigate hook\n// const [user,setUser]=useState([])\n// //updateUserProfile\n// //deleteUserProfile\n\n//   // // fetch all articles on initial render\n//   // useEffect(() => { \n//   //   getAllNews().then((articlesArray) => \n//   //     setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))))\n//   // }, []) \n\n//   // // handle editing article\n//   // const handleEditClick = (article) => {  \n//   //   setArticleBeingEdited({ ...article, originalTimestamp: article.timestamp })\n//   // }\n\n//   // // handle saving the edited article\n//   // const handleEditSave = async (event) => {\n//   //   event.preventDefault() // prevent default form submission\n//   //   if (!articleBeingEdited.title || !articleBeingEdited.synopsis || !articleBeingEdited.url) {\n//   //     alert('Please fill out the title, synopsis, and URL!')\n//   //     return\n//   //   }\n//   //   await modifyArticle(articleBeingEdited)\n//   //   setArticleBeingEdited({}) // exit editing mode\n//   //   getAllNews().then((articlesArray) => setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))))\n//   // }\n\n//   // // handle deleting an article\n//   // const handleDeleteArticle = async (articleId) => { \n//   //   await deleteArticle(articleId)\n//   //   getAllNews().then((articlesArray) => {\n//   //     setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)))\n//   //   })\n//   // }\n\n//   useEffect(() => {\n//     getUserById().then((usersArray) => {\n//         const user = usersArray.filter(user => user.id === currentUser.id);\n//         setUser(user);\n//     });\n// }, [currentUser.id]);\n\n// // Handle delete functionality\n// const handleDeleteProfile = async (profileToDelete) => {\n//   const confirmDelete = window.confirm(`Are you sure you want to delete your profile?`);\n//   if (confirmDelete) {\n//       await deleteUserProfile(profileToDelete.id);\n//       // Update profiles state by filtering out the deleted post\n//       setExistingUsers(existingUsers => existingUsers.filter(profile => profile.id !== postToDelete.id));\n//       alert(`Successfully deleted profile`);\n//     }\n// };\n\n// // Handle modify functionality (placeholder)\n// // const handleUpdateProfile = async (profile) => {\n// //   //updateUserProfile\n// //   await updateUserProfile(profileToDelete.id);\n// //   console.log(\"Modify pet post:\", profile);\n// //   // Implement modify logic as needed\n// // };\n\n//   return (\n//     <div>\n//       <h1>My Profile</h1>\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\"/></div>\n//       <p>Full Name: {currentUser.fullName}</p>\n//       <p>Email: {currentUser.email}</p>\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\n//       <p>City: {currentUser.city}</p>\n//       <p>State: {currentUser.state}</p>\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile`)}>Update Profile</Button>\n//       <Button variant=\"success\" onClick={() => handleDeleteProfile(petDetails)}>Delete Profile</Button>\n//     </div>\n//   );\n// };\n\n// import React, { useEffect, useState } from 'react';\n// import { deleteUserProfile, getAllUsers } from \"../../services/userService\";\n// import { useNavigate } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\n\n// export const MyProfile = ({ currentUser }) => {\n//   const [user, setUser] = useState({});\n//   const navigate = useNavigate();\n\n//   // useEffect(() => {\n//   //   const fetchUser = async () => {\n//   //     try {\n//   //       const fetchedUser = await getUserById(currentUser.id);\n//   //       setUser(fetchedUser);\n//   //     } catch (error) {\n//   //       console.error('Failed to fetch user', error);\n//   //     }\n//   //   };\n//   //   fetchUser();\n//   // }, [currentUser.id]);\n\n//   useEffect(() => {\n//     getAllUsers().then((usersArray) => {\n//         const userProfiles = usersArray.filter(profile => profile.ownerId === currentUser.id);\n//         setMyProfiles(userProfiles);\n//     });\n// }, [currentUser.id]);\n\n//   const handleDeleteProfile = async () => {\n//     const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\n//     if (confirmDelete) {\n//       try {\n//         await deleteUserProfile(currentUser.id);\n//         alert('Profile successfully deleted');\n//         navigate('/login'); // Redirect to login or another appropriate page\n//       } catch (error) {\n//         console.error('Failed to delete profile', error);\n//         alert('Failed to delete profile');\n//       }\n//     }\n//   };\n\n// //handleModifyProfile:navigate(`/updateProfile/${currentUser.id}` then rerender\n\n//   return (\n//     <div>\n//       <h1>My Profile</h1>\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\" /></div>\n//       <p>Full Name: {currentUser.fullName}</p>\n//       <p>Email: {currentUser.email}</p>\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\n//       <p>City: {currentUser.city}</p>\n//       <p>State: {currentUser.state}</p>\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile/${currentUser.id}`)}>Update Profile</Button>  \n//       <Button variant=\"danger\" onClick={handleDeleteProfile}>Delete Profile</Button>\n//     </div>\n//   );\n// };\n\n// import React, { useEffect, useState } from 'react';\n// import { deleteUserProfile, getAllUsers } from \"../../services/userService\";\n// import { useNavigate } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\n\n// export const MyProfile = ({ currentUser }) => {\n//   const [user, setUser] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     getAllUsers().then((usersArray) => {\n//         const userProfile = usersArray.filter(user => user.id === currentUser.id);\n//         setUser(userProfile);\n//     });\n// }, [currentUser.id]);\n\n//   const handleDeleteProfile = async () => {\n//     const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\n//     if (confirmDelete) {\n//       try {\n//         await deleteUserProfile(currentUser.id);\n//         alert('Profile successfully deleted');\n//         navigate('/login'); // Redirect to login or another appropriate page\n//       } catch (error) {\n//         console.error('Failed to delete profile', error);\n//         alert('Failed to delete profile');\n//       }\n//     }\n//   };\n\n// //handleModifyProfile:navigate(`/updateProfile/${currentUser.id}` then rerender\n\n//   return (\n//     <div>\n//       <h1>My Profile</h1>\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\" /></div>\n//       <p>Full Name: {currentUser.fullName}</p>\n//       <p>Email: {currentUser.email}</p>\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\n//       <p>City: {currentUser.city}</p>\n//       <p>State: {currentUser.state}</p>\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile/${currentUser.id}`)}>Update Profile</Button>  \n//       <Button variant=\"danger\" onClick={handleDeleteProfile(currentUser)}>Delete Profile</Button>\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from 'react';\nimport { deleteUserProfile, getAllUsers } from \"../../services/userService\";\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyProfile = ({\n  currentUser\n}) => {\n  _s();\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    getAllUsers().then(usersArray => {\n      const userProfile = usersArray.find(user => user.id === currentUser.id);\n      setUser(userProfile);\n    });\n  }, [currentUser.id]);\n  const handleDeleteProfile = async () => {\n    const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\n    if (confirmDelete) {\n      try {\n        await deleteUserProfile(currentUser.id);\n        alert('Profile successfully deleted');\n        navigate('/login'); // Redirect to login or another appropriate page\n      } catch (error) {\n        console.error('Failed to delete profile', error);\n        alert('Failed to delete profile');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photo,\n        alt: user.fullName,\n        className: \"user-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Full Name: \", user.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone Number: \", user.phoneNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"City: \", user.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"State: \", user.state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: () => navigate(`/updateProfile/${currentUser.id}`),\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      onClick: handleDeleteProfile,\n      children: \"Delete Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProfile, \"CS/+sbWrftxgoO6YIJIYUuaOh2A=\", false, function () {\n  return [useNavigate];\n});\n_c = MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["React","useEffect","useState","deleteUserProfile","getAllUsers","useNavigate","Button","jsxDEV","_jsxDEV","MyProfile","currentUser","_s","user","setUser","navigate","then","usersArray","userProfile","find","id","handleDeleteProfile","confirmDelete","window","confirm","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","photo","alt","fullName","className","email","phoneNumber","city","state","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/c9/test2/src/components/profile/MyProfile.jsx"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { deleteUserProfile, getUserById, updateUserProfile } from \"../../services/userService\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\n// export const MyProfile = ({ currentUser }) => {\r\n//   const [myPosts, setMyPosts] = useState([]);\r\n// const [allUsers,setAllUsers]=useState([])\r\n// const [existingUser,setExistingUsers]=useState([])\r\n// const [userBeingEdited, setUserBeingEdited] = useState({})\r\n// const navigate = useNavigate() // useNavigate hook\r\n// const [user,setUser]=useState([])\r\n// //updateUserProfile\r\n// //deleteUserProfile\r\n\r\n//   // // fetch all articles on initial render\r\n//   // useEffect(() => { \r\n//   //   getAllNews().then((articlesArray) => \r\n//   //     setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))))\r\n//   // }, []) \r\n\r\n//   // // handle editing article\r\n//   // const handleEditClick = (article) => {  \r\n//   //   setArticleBeingEdited({ ...article, originalTimestamp: article.timestamp })\r\n//   // }\r\n\r\n//   // // handle saving the edited article\r\n//   // const handleEditSave = async (event) => {\r\n//   //   event.preventDefault() // prevent default form submission\r\n//   //   if (!articleBeingEdited.title || !articleBeingEdited.synopsis || !articleBeingEdited.url) {\r\n//   //     alert('Please fill out the title, synopsis, and URL!')\r\n//   //     return\r\n//   //   }\r\n//   //   await modifyArticle(articleBeingEdited)\r\n//   //   setArticleBeingEdited({}) // exit editing mode\r\n//   //   getAllNews().then((articlesArray) => setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))))\r\n//   // }\r\n\r\n//   // // handle deleting an article\r\n//   // const handleDeleteArticle = async (articleId) => { \r\n//   //   await deleteArticle(articleId)\r\n//   //   getAllNews().then((articlesArray) => {\r\n//   //     setAllArticles(articlesArray.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)))\r\n//   //   })\r\n//   // }\r\n\r\n\r\n//   useEffect(() => {\r\n//     getUserById().then((usersArray) => {\r\n//         const user = usersArray.filter(user => user.id === currentUser.id);\r\n//         setUser(user);\r\n//     });\r\n// }, [currentUser.id]);\r\n\r\n\r\n// // Handle delete functionality\r\n// const handleDeleteProfile = async (profileToDelete) => {\r\n//   const confirmDelete = window.confirm(`Are you sure you want to delete your profile?`);\r\n//   if (confirmDelete) {\r\n//       await deleteUserProfile(profileToDelete.id);\r\n//       // Update profiles state by filtering out the deleted post\r\n//       setExistingUsers(existingUsers => existingUsers.filter(profile => profile.id !== postToDelete.id));\r\n//       alert(`Successfully deleted profile`);\r\n//     }\r\n// };\r\n\r\n// // Handle modify functionality (placeholder)\r\n// // const handleUpdateProfile = async (profile) => {\r\n// //   //updateUserProfile\r\n// //   await updateUserProfile(profileToDelete.id);\r\n// //   console.log(\"Modify pet post:\", profile);\r\n// //   // Implement modify logic as needed\r\n// // };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>My Profile</h1>\r\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\"/></div>\r\n//       <p>Full Name: {currentUser.fullName}</p>\r\n//       <p>Email: {currentUser.email}</p>\r\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\r\n//       <p>City: {currentUser.city}</p>\r\n//       <p>State: {currentUser.state}</p>\r\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile`)}>Update Profile</Button>\r\n//       <Button variant=\"success\" onClick={() => handleDeleteProfile(petDetails)}>Delete Profile</Button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { deleteUserProfile, getAllUsers } from \"../../services/userService\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Button } from 'react-bootstrap';\r\n\r\n// export const MyProfile = ({ currentUser }) => {\r\n//   const [user, setUser] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   // useEffect(() => {\r\n//   //   const fetchUser = async () => {\r\n//   //     try {\r\n//   //       const fetchedUser = await getUserById(currentUser.id);\r\n//   //       setUser(fetchedUser);\r\n//   //     } catch (error) {\r\n//   //       console.error('Failed to fetch user', error);\r\n//   //     }\r\n//   //   };\r\n//   //   fetchUser();\r\n//   // }, [currentUser.id]);\r\n\r\n//   useEffect(() => {\r\n//     getAllUsers().then((usersArray) => {\r\n//         const userProfiles = usersArray.filter(profile => profile.ownerId === currentUser.id);\r\n//         setMyProfiles(userProfiles);\r\n//     });\r\n// }, [currentUser.id]);\r\n\r\n//   const handleDeleteProfile = async () => {\r\n//     const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\r\n//     if (confirmDelete) {\r\n//       try {\r\n//         await deleteUserProfile(currentUser.id);\r\n//         alert('Profile successfully deleted');\r\n//         navigate('/login'); // Redirect to login or another appropriate page\r\n//       } catch (error) {\r\n//         console.error('Failed to delete profile', error);\r\n//         alert('Failed to delete profile');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n// //handleModifyProfile:navigate(`/updateProfile/${currentUser.id}` then rerender\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>My Profile</h1>\r\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\" /></div>\r\n//       <p>Full Name: {currentUser.fullName}</p>\r\n//       <p>Email: {currentUser.email}</p>\r\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\r\n//       <p>City: {currentUser.city}</p>\r\n//       <p>State: {currentUser.state}</p>\r\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile/${currentUser.id}`)}>Update Profile</Button>  \r\n//       <Button variant=\"danger\" onClick={handleDeleteProfile}>Delete Profile</Button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { deleteUserProfile, getAllUsers } from \"../../services/userService\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Button } from 'react-bootstrap';\r\n\r\n// export const MyProfile = ({ currentUser }) => {\r\n//   const [user, setUser] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n\r\n//   useEffect(() => {\r\n//     getAllUsers().then((usersArray) => {\r\n//         const userProfile = usersArray.filter(user => user.id === currentUser.id);\r\n//         setUser(userProfile);\r\n//     });\r\n// }, [currentUser.id]);\r\n\r\n//   const handleDeleteProfile = async () => {\r\n//     const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\r\n//     if (confirmDelete) {\r\n//       try {\r\n//         await deleteUserProfile(currentUser.id);\r\n//         alert('Profile successfully deleted');\r\n//         navigate('/login'); // Redirect to login or another appropriate page\r\n//       } catch (error) {\r\n//         console.error('Failed to delete profile', error);\r\n//         alert('Failed to delete profile');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n// //handleModifyProfile:navigate(`/updateProfile/${currentUser.id}` then rerender\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>My Profile</h1>\r\n//       <div><img src={currentUser.photo} alt={currentUser.fullName} className=\"user-photo\" /></div>\r\n//       <p>Full Name: {currentUser.fullName}</p>\r\n//       <p>Email: {currentUser.email}</p>\r\n//       <p>Phone Number: {currentUser.phoneNumber}</p>\r\n//       <p>City: {currentUser.city}</p>\r\n//       <p>State: {currentUser.state}</p>\r\n//       <Button variant=\"warning\" onClick={() => navigate(`/updateProfile/${currentUser.id}`)}>Update Profile</Button>  \r\n//       <Button variant=\"danger\" onClick={handleDeleteProfile(currentUser)}>Delete Profile</Button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteUserProfile, getAllUsers } from \"../../services/userService\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const MyProfile = ({ currentUser }) => {\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getAllUsers().then((usersArray) => {\r\n      const userProfile = usersArray.find(user => user.id === currentUser.id);\r\n      setUser(userProfile);\r\n    });\r\n  }, [currentUser.id]);\r\n\r\n  const handleDeleteProfile = async () => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete your profile?');\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteUserProfile(currentUser.id);\r\n        alert('Profile successfully deleted');\r\n        navigate('/login'); // Redirect to login or another appropriate page\r\n      } catch (error) {\r\n        console.error('Failed to delete profile', error);\r\n        alert('Failed to delete profile');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Profile</h1>\r\n      <div><img src={user.photo} alt={user.fullName} className=\"user-photo\" /></div>\r\n      <p>Full Name: {user.fullName}</p>\r\n      <p>Email: {user.email}</p>\r\n      <p>Phone Number: {user.phoneNumber}</p>\r\n      <p>City: {user.city}</p>\r\n      <p>State: {user.state}</p>\r\n      <Button variant=\"warning\" onClick={() => navigate(`/updateProfile/${currentUser.id}`)}>Update Profile</Button>  \r\n      <Button variant=\"danger\" onClick={handleDeleteProfile}>Delete Profile</Button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,4BAA4B;AAC3E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMY,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}